/*! For license information please see script.js.LICENSE.txt */
!function(){"use strict";var e={"./src/assets/script/utils.ts":function(e,t,o){o.r(t),o.d(t,{getDevice:function(){return n}});const n=()=>{const e=navigator.userAgent;return e.indexOf("iPhone")>0||e.indexOf("iPod")>0||e.indexOf("Android")>0&&e.indexOf("Mobile")>0?"sp":e.indexOf("iPad")>0||e.indexOf("Android")>0?"tab":"other"}}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,o),i.exports}o.d=function(e,t){for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};!function(){o.r(n);var e=o("./src/assets/script/utils.ts");window.onload=()=>{const t=document.querySelectorAll("html")[0];"other"===(0,e.getDevice)()?t.classList.add("is-noTouchDevice"):t.classList.add("is-touchDevice")}}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,